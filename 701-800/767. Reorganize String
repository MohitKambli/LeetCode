class Solution {
    public String reorganizeString(String s) {
        Map<Character, Integer> map = new HashMap<>();
        int n = s.length();
        for(int i=0;i<n;i++) {
            char ch = s.charAt(i);
            map.put(ch, map.getOrDefault(ch, 0) + 1);
        }
        PriorityQueue<Character> heap = new PriorityQueue<>((a, b) -> map.get(b) - map.get(a));
        for(char key : map.keySet())
            heap.add(key);
        String ans = "";
        while(heap.size() >= 2) {
            char x = heap.poll();
            char y = heap.poll();
            ans += x;
            ans += y;
            map.put(x, map.get(x) - 1);
            map.put(y, map.get(y) - 1);
            if(map.get(x) > 0)
                heap.add(x);
            if(map.get(y) > 0)
                heap.add(y);
        }
        if(!heap.isEmpty()) {
            char ch = heap.poll();
            if(map.get(ch) > 1)
                return "";
            ans += ch;
        }
        return ans;
    }
}
