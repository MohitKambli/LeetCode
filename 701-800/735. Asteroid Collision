class Solution {
    public int[] asteroidCollision(int[] asteroids) {
        Stack<Integer> stack = new Stack<>();
        for(int asteroid : asteroids) {
            while(!stack.isEmpty() && asteroid < 0 && stack.peek() > 0) {
                int diff = stack.peek() + asteroid;
                if(diff > 0)
                    asteroid = 0;
                else if(diff < 0)
                    stack.pop();
                else {
                    asteroid = 0;
                    stack.pop();
                }
            }
            if(asteroid != 0)
                stack.push(asteroid);
        }
        int len = stack.size(), j = len - 1;
        int[] ans = new int[len];
        while(!stack.isEmpty())
            ans[j--] = stack.pop();
        return ans;
    }
}


class Solution:
    def asteroidCollision(self, asteroids: List[int]) -> List[int]:
        stack = []
        for asteroid in asteroids:
            while len(stack) > 0 and stack[len(stack)-1] > 0 and asteroid < 0:
                diff = stack[len(stack)-1] + asteroid
                if diff > 0:
                    asteroid = 0
                elif diff < 0:
                    stack.pop()
                else:
                    asteroid = 0
                    stack.pop()
            if asteroid != 0:
                stack.append(asteroid)
        return [value for value in stack]
            
