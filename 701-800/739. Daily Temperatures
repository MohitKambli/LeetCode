class Solution {
    public int[] dailyTemperatures(int[] temperatures) {
        int n = temperatures.length;
        int[] ans = new int[n];
        List<int[]> stack = new ArrayList<>();
        stack.add(new int[]{temperatures[0], 0});
        for(int i=1;i<n;i++) {
            while(!stack.isEmpty() && temperatures[i] > stack.get(stack.size()-1)[0]) {
                int[] pair = stack.remove(stack.size()-1);
                ans[pair[1]] = i - pair[1];
            }
            stack.add(new int[]{temperatures[i], i});
        }
        return ans;
    }
}




class Solution {
    public int[] dailyTemperatures(int[] temperatures) {
        List<int[]> stack = new ArrayList<>();
        stack.add(new int[]{0, temperatures[0]});
        int n = temperatures.length;
        int[] ans = new int[n];
        for(int i=1;i<n;i++) {
            while(!stack.isEmpty() && stack.get(stack.size()-1)[1] < temperatures[i]) {
                int[] pair = stack.remove(stack.size()-1);
                ans[pair[0]] = i - pair[0];
            }
            stack.add(new int[]{i, temperatures[i]});
        }
        return ans;
    }
}




class Solution:
    def dailyTemperatures(self, temperatures: List[int]) -> List[int]:
        n = len(temperatures)
        ans = [0 for i in range(n)]
        stack = [(temperatures[0], 0)]
        for i in range(n):
            while len(stack) > 0 and temperatures[i] > stack[len(stack)-1][0]:
                temperature, index = stack.pop()
                ans[index] = i - index
            stack.append((temperatures[i], i))
        return ans
