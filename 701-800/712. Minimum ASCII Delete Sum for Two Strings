class Solution {
    public int helper(int i, int j, String s1, String s2, int[][] dp) {
        if(i < 0 && j < 0)
            return 0;
        if(i < 0) {
            int sum = 0;
            for(int itr=0;itr<=j;itr++)
                sum += (int)s2.charAt(itr);
            return sum;
        }
        if(j < 0) {
            int sum = 0;
            for(int itr=0;itr<=i;itr++)
                sum += (int)s1.charAt(itr);
            return sum;
        }
        if(dp[i][j] != -1)
            return dp[i][j];

        int ans = Integer.MAX_VALUE;
        if(s1.charAt(i) == s2.charAt(j))
            ans = helper(i-1, j-1, s1, s2, dp);
        else {
            ans = Math.min(ans, (int)s1.charAt(i) + helper(i-1, j, s1, s2, dp));
            ans = Math.min(ans, (int)s2.charAt(j) + helper(i, j-1, s1, s2, dp));
        }
        return dp[i][j] = ans;
    }
    public int minimumDeleteSum(String s1, String s2) {
        int m = s1.length(), n = s2.length();
        int[][] dp = new int[m][n];
        for(int[] arr : dp)
            Arrays.fill(arr, -1);
        return helper(m-1, n-1, s1, s2, dp);
    }
}
