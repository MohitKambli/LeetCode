class Solution {
    public int singleNumber(int[] nums) {
        /*Set<Integer> set = new HashSet<>();
        for(int num : nums) {
            if(set.contains(num))
                set.remove(num);
            else
                set.add(num);
        }
        return set.iterator().next();*/
        int xor = 0;
        for(int num : nums)
            xor ^= num;
        return xor;
    }
}




class Solution {
    public int singleNumber(int[] nums) {
        Map<Integer, Integer> map = new HashMap<>();
        for(int num : nums)
            map.put(num, map.getOrDefault(num, 0) + 1);
        for(Map.Entry<Integer, Integer> entry : map.entrySet())
            if(entry.getValue() == 1)
                return entry.getKey();
        return -1;
    }
}




class Solution {
    public int singleNumber(int[] nums) {
        int xor = 0;
        for(int num : nums)
            xor ^= num;
        return xor;
    }
}
