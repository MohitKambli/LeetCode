/**
 * Definition for a binary tree node.
 * public class TreeNode {
 *     int val;
 *     TreeNode left;
 *     TreeNode right;
 *     TreeNode() {}
 *     TreeNode(int val) { this.val = val; }
 *     TreeNode(int val, TreeNode left, TreeNode right) {
 *         this.val = val;
 *         this.left = left;
 *         this.right = right;
 *     }
 * }
 */

class Solution {
    int ans = Integer.MIN_VALUE;
    public int helper(TreeNode node) {
        if(node == null)
            return 0;
        
        int leftMaxSum = Math.max(0, helper(node.left));
        int rightMaxSum = Math.max(0, helper(node.right));
        ans = Math.max(ans, leftMaxSum + rightMaxSum + node.val);
        return node.val + Math.max(leftMaxSum, rightMaxSum);
    }
    public int maxPathSum(TreeNode root) {
        helper(root);
        return ans;
    }
}
