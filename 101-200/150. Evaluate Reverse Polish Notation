class Solution {
    public int evalRPN(String[] tokens) {
        List<Integer> stack = new ArrayList<>();
        for(String token : tokens) {
            if(token.equals("+")) {
                int x = stack.remove(stack.size()-1);
                int y = stack.remove(stack.size()-1);
                stack.add(x + y);
            } else if(token.equals("-")) {
                int x = stack.remove(stack.size()-1);
                int y = stack.remove(stack.size()-1);
                stack.add(y - x);
            } else if(token.equals("*")) {
                int x = stack.remove(stack.size()-1);
                int y = stack.remove(stack.size()-1);
                stack.add(x * y);
            } else if(token.equals("/")) {
                int x = stack.remove(stack.size()-1);
                int y = stack.remove(stack.size()-1);
                stack.add(y / x);
            } else {
                stack.add(Integer.parseInt(token));
            }
        }
        return stack.get(0);
    }
}




class Solution(object):
    def evalRPN(self, tokens):
        """
        :type tokens: List[str]
        :rtype: int
        """
        stack = []
        for token in tokens:
            if token == '+':
                a = stack.pop()
                b = stack.pop()
                stack.append(a + b)
            elif token == '-':
                a = stack.pop()
                b = stack.pop()
                stack.append(b - a)
            elif token == '*':
                a = stack.pop()
                b = stack.pop()
                stack.append(a * b)
            elif token == '/':
                a = stack.pop()
                b = stack.pop()
                stack.append(int(float(b) / a))
            else:
                stack.append(int(token))
        return stack.pop()
