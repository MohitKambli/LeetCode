class Solution {
    public List<List<Integer>> levelOrderBottom(TreeNode root) {
        List<List<Integer>> result = new ArrayList<>();
        List<TreeNode> queue = new ArrayList<>();
        queue.add(root);
        while(queue.size() != 0) {
            int queueSize = queue.size();
            List<Integer> level = new ArrayList<>();
            for(int i=0;i<queueSize;i++) {
                TreeNode node = queue.remove(0);
                if(node != null) {
                    level.add(node.val);
                    queue.add(node.left);
                    queue.add(node.right);
                }
            }
            if(level.size() != 0)
                result.add(level);
        }
        List<List<Integer>> ans = new ArrayList<>();
        for(int i=result.size()-1;i>=0;i--)
            ans.add(result.get(i));
        return ans;
    }
}
