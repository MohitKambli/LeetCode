class Solution {
    public int[] arrayRankTransform(int[] arr) {
        /*int n = arr.length, j = 1;
        int[] ans = new int[n];
        Map<Integer, List<Integer>> map = new TreeMap<>();
        for(int i=0;i<n;i++) {
            int num = arr[i];
            if(!map.containsKey(num))
                map.put(num, new ArrayList<>());
            map.get(num).add(i);
        }
        for(Map.Entry<Integer, List<Integer>> entry : map.entrySet()) {
            int key = entry.getKey();
            List<Integer> values = entry.getValue();
            for(int value : values)
                ans[value] = j;
            j++;
        }
        return ans;*/

        int n = arr.length, j = 0;
        int[] temp = new int[n];
        for(int num : arr)
            temp[j++] = num;
        Arrays.sort(temp);
        Map<Integer, Integer> map = new HashMap<>();
        for(int num : temp)
            if(!map.containsKey(num))
                map.put(num, map.size() + 1);
        int[] ans = new int[n];
        for(int i=0;i<n;i++)
            ans[i] = map.get(arr[i]);
        return ans;
    }
}
