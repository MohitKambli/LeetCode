class Solution {
    public int helper(int i, int j , int[] nums1, int[] nums2, int[][] dp) {
        if(i < 0 || j < 0)
            return 0;
        if(dp[i][j] != -1)
            return dp[i][j];

        if(nums1[i] == nums2[j])
            return dp[i][j] = 1 + helper(i-1, j-1, nums1, nums2, dp);
        return dp[i][j] = Math.max(helper(i-1, j, nums1, nums2, dp), helper(i, j-1, nums1, nums2, dp));
    }
    public int maxUncrossedLines(int[] nums1, int[] nums2) {
        int m = nums1.length, n = nums2.length;
        int[][] dp = new int[m][n];
        for(int[] arr : dp)
            Arrays.fill(arr, -1);
        return helper(m-1, n-1, nums1, nums2, dp);
    }
}
