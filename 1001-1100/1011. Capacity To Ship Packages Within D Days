class Solution {
    public int helper(int weight, int n, int[] weights) {
        int days = 1, temp = 0;
        for(int i=0;i<n;i++) {
            if(temp + weights[i] <= weight)
                temp += weights[i];
            else {
                days++;
                temp = weights[i];
            }
        }
        return days;
    }
    public int shipWithinDays(int[] weights, int days) {
        int n = weights.length;
        if(days > n)
            return -1;
        int sum = weights[0], max = weights[0];
        for(int i=1;i<n;i++) {
            sum += weights[i];
            max = Math.max(max, weights[i]);
        }
        int left = max, right = sum;
        while(left <= right) {
            int mid = left + (right - left) / 2;
            int d = helper(mid, n, weights);
            if(d > days)
                left = mid + 1;
            else
                right = mid - 1;
        }
        return left;
    }
}
