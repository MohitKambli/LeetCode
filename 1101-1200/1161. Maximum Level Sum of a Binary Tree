/**
 * Definition for a binary tree node.
 * public class TreeNode {
 *     int val;
 *     TreeNode left;
 *     TreeNode right;
 *     TreeNode() {}
 *     TreeNode(int val) { this.val = val; }
 *     TreeNode(int val, TreeNode left, TreeNode right) {
 *         this.val = val;
 *         this.left = left;
 *         this.right = right;
 *     }
 * }
 */
class Solution {
    public int maxLevelSum(TreeNode root) {
        List<TreeNode> queue = new ArrayList<>();
        queue.add(root);
        int level = -1, maxSum = Integer.MIN_VALUE, i = 1;
        while(!queue.isEmpty()) {
            int size = queue.size();
            int sum = 0;
            while(size-- > 0) {
                TreeNode node = queue.remove(0);
                sum += node.val;
                if(node.left != null)
                    queue.add(node.left);
                if(node.right != null)
                    queue.add(node.right);
            }
            if(sum > maxSum) {
                maxSum = sum;
                level = i;
            }
            i++;
        }
        return level;
    }
}
