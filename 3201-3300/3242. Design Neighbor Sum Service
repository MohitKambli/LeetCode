class NeighborSum {

    Map<Integer, int[]> map;
    int[][] grid;
    public NeighborSum(int[][] g) {
        this.grid = g;
        int m = g.length, n = g[0].length;
        map = new HashMap<>();
        for(int i=0;i<m;i++)
            for(int j=0;j<n;j++)
                map.put(g[i][j], new int[]{i, j});
    }
    
    public int adjacentSum(int value) {
        int[] cell = map.get(value);
        int i = cell[0], j = cell[1], sum = 0;
        if(i-1 >= 0)
            sum += grid[i-1][j];
        if(j-1 >= 0)
            sum += grid[i][j-1];
        if(i+1 < grid.length)
            sum += grid[i+1][j];
        if(j+1 < grid[0].length)
            sum += grid[i][j+1];
        return sum;
    }
    
    public int diagonalSum(int value) {
        int[] cell = map.get(value);
        int i = cell[0], j = cell[1], sum = 0;
        if(i-1 >= 0 && j-1 >= 0)
            sum += grid[i-1][j-1];
        if(i-1 >= 0 && j+1 < grid[0].length)
            sum += grid[i-1][j+1];
        if(i+1 < grid.length && j-1 >= 0)
            sum += grid[i+1][j-1];
        if(i+1 < grid.length && j+1 < grid[0].length)
            sum += grid[i+1][j+1];
        return sum;
    }
}

/**
 * Your NeighborSum object will be instantiated and called as such:
 * NeighborSum obj = new NeighborSum(grid);
 * int param_1 = obj.adjacentSum(value);
 * int param_2 = obj.diagonalSum(value);
 */
