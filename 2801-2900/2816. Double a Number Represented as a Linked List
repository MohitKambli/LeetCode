/**
 * Definition for singly-linked list.
 * public class ListNode {
 *     int val;
 *     ListNode next;
 *     ListNode() {}
 *     ListNode(int val) { this.val = val; }
 *     ListNode(int val, ListNode next) { this.val = val; this.next = next; }
 * }
 */
class Solution {
    public ListNode reverseLL(ListNode head) {
        if(head == null || head.next == null)
            return head;
        
        ListNode p = null, q = head;
        while(q != null) {
            ListNode r = q.next;
            q.next = p;
            p = q;
            q = r;
        }
        return p;
    }
    public ListNode doubleIt(ListNode head) {
        ListNode curr = reverseLL(head);
        int carry = 0;
        ListNode p = null;
        while(curr != null) {
            int temp = curr.val * 2;
            int sum = temp + carry;
            carry = sum / 10;
            sum %= 10;
            ListNode node = new ListNode(sum);
            node.next = p;
            p = node;
            curr = curr.next;
        }
        if(carry != 0) {
            ListNode node = new ListNode(carry);
            node.next = p;
            p = node;
        }
        return p;
    }
}
