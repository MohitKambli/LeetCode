class Solution {
    public boolean isPossible(int[] arr, int mid, int n, int m, int k) {
        int count = 0, bouquets = 0;
        for(int i=0;i<n;i++) {
            if(arr[i] <= mid) {
                count++;
            } else {
                bouquets += (count / k);
                count = 0;
            }
        }
        bouquets += (count / k);;
        return bouquets >= m;
    }
    public int minDays(int[] bloomDay, int m, int k) {
        int n = bloomDay.length;
        if((long)n < (long)m * (long)k)
            return -1;
        int min = Integer.MAX_VALUE, max = Integer.MIN_VALUE;
        for(int day : bloomDay) {
            min = Math.min(min, day);
            max = Math.max(max, day);
        }
        int left = min, right = max, ans = max;
        while(left <= right) {
            int mid = (left + right) / 2;
            if(isPossible(bloomDay, mid, n, m, k)) {
                ans = mid;
                right = mid - 1;
            } else {
                left = mid + 1;
            }
        }
        return ans;
    }
}
