class Solution {
    public int helper(int index, int amount, int[] coins, int[][] dp) {
        if(amount == 0)
            return 1;
        if(index < 0)
            return 0;
        if(dp[index][amount] != -1)
            return dp[index][amount];

        int notPick = helper(index-1, amount, coins, dp);
        int pick = 0;
        if(coins[index] <= amount)
            pick = helper(index, amount-coins[index], coins, dp);
        return dp[index][amount] = pick + notPick;
    }
    public int change(int amount, int[] coins) {
        int n = coins.length;
        int[][] dp = new int[n][amount+1];
        for(int[] arr : dp)
            Arrays.fill(arr, -1);
        return helper(n-1, amount, coins, dp);
    }
}
