class Solution {
    public boolean helper(int x, int n, int m, int[] quantities) {
        for(int i=0;i<m;i++) {
            n -= Math.ceil(quantities[i] / (1.0 * x));
            if(n < 0)
                return false;
        }
        return true;
    }
    public int minimizedMaximum(int n, int[] quantities) {
        int m = quantities.length, ans = -1, left = 0, right = (int)1e5;
        while(left <= right) {
            int mid = left + (right - left) / 2;
            if(helper(mid, n, m, quantities)) {
                ans = mid;
                right = mid - 1;
            } else {
                left = mid + 1;
            }
        }
        return ans;
    }
}
