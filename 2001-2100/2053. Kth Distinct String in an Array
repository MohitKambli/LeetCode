class Solution {
    public String kthDistinct(String[] arr, int k) {
        Map<String, Integer> map = new LinkedHashMap<>();
        for(String s : arr)
            map.put(s, map.getOrDefault(s, 0) + 1);
        for(Map.Entry<String, Integer> entry : map.entrySet()) {
            if(entry.getValue() == 1) {
                k--;
                if(k == 0)
                    return entry.getKey();
            }
        }
        return "";
    }
}





class Solution:
    def kthDistinct(self, arr: List[str], k: int) -> str:
        from collections import OrderedDict
        frequency = OrderedDict()
        for ch in arr:
            frequency[ch] = frequency.get(ch, 0) + 1
        for key, value in frequency.items():
            if value == 1:
                k -= 1
            if k < 0:
                return ''
            if k == 0:
                return key
        return ''
