class Solution {
    public int[][] spiralMatrixIII(int rows, int cols, int rStart, int cStart) {
        int steps = 0, direction = 0;
        int[][] directions = new int[][]{{0, 1},{1, 0},{0, -1},{-1, 0}};
        List<int[]> res = new ArrayList<>();
        res.add(new int[]{rStart, cStart});
        while(res.size() < rows * cols) {
            if(direction == 0 || direction == 2)
                steps++;
            for(int i=0;i<steps;i++) {
                rStart += directions[direction][0];
                cStart += directions[direction][1];
                if(rStart >= 0 && rStart < rows && cStart >= 0 && cStart < cols)
                    res.add(new int[]{rStart, cStart});
            }
            direction = (direction+1) % 4;
        }
        int j = 0;
        int[][] ans = new int[res.size()][2];
        for(int[] x : res)
            ans[j++] = x;
        return ans;
    }
}
