class Solution {
    public void helper(int open, int close, int n, String temp, List<String> ans) {
        if(open == n && close == n) {
            ans.add(temp);
            return;
        }
        
        if(open < n) {
            temp += "(";
            helper(open+1, close, n, temp, ans);
            temp = temp.substring(0, temp.length()-1);
        }
        if(close < open) {
            temp += ")";
            helper(open, close+1, n, temp, ans);
            temp = temp.substring(0, temp.length()-1);
        }
    }
    public List<String> generateParenthesis(int n) {
        List<String> ans = new ArrayList<>();
        helper(0, 0, n, "", ans);
        return ans;
    }
}
