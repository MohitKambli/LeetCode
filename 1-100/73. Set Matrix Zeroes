class Solution {
    public void setZeroes(int[][] matrix) {
        int m = matrix.length, n = matrix[0].length;
        List<int[]> arr = new ArrayList<>();
        for(int i=0;i<m;i++)
            for(int j=0;j<n;j++)
                if(matrix[i][j] == 0)
                    arr.add(new int[]{i, j});
        for(int[] cell : arr) {
            for(int i=0;i<n;i++)
                matrix[cell[0]][i] = 0;
            for(int i=0;i<m;i++)
                matrix[i][cell[1]] = 0;
        }
    }
}


class Solution {
    public void setZeroes(int[][] matrix) {
        Queue<int[]> queue = new LinkedList<>();
        int m = matrix.length, n = matrix[0].length;
        for(int i=0;i<m;i++)
            for(int j=0;j<n;j++)
                if(matrix[i][j] == 0)
                    queue.offer(new int[]{i, j});
        while(!queue.isEmpty()) {
            int[] pair = queue.poll();
            int row = pair[0], col = pair[1];
            for(int i=0;i<m;i++)
                matrix[i][col] = 0;
            for(int i=0;i<n;i++)
                matrix[row][i] = 0;
        }
    }
}

