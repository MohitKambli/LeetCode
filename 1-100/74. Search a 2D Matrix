class Solution {
    public boolean searchMatrix(int[][] matrix, int target) {
        int m = matrix.length, n = matrix[0].length, left = 0, right = (m * n) - 1;
        while(left <= right) {
            int mid = left + (right - left) / 2;
            int row = mid / n, col = mid % n;
            if(matrix[row][col] == target)
                return true;
            else if(matrix[row][col] > target)
                right = mid - 1;
            else
                left = mid + 1;
        }
        return false;
    }
}


class Solution {
    public boolean searchMatrix(int[][] matrix, int target) {
        int left = 0, right = matrix[0].length-1;
        while(left < matrix.length && right >= 0) {
            if(matrix[left][right] == target)
                return true;
            else if(matrix[left][right] > target)
                right--;
            else
                left++;
        }
        return false;
    }
}
