class Solution {
    public int helper(int n, int[] dp) {
        if(n <= 1)
            return 1;
        if(dp[n] != -1)
            return dp[n];
        
        int total = 0;
        for(int i=1;i<=n;i++)
            total += helper(i-1, dp) * helper(n-i, dp);
        return dp[n] = total;
    }
    public int numTrees(int n) {
        int[] dp = new int[n+1];
        // Recursion + Memoization
        /*Arrays.fill(dp, -1);
        return helper(n, dp);*/

        // Tabulation
        Arrays.fill(dp, 1);
        if(n <= 1)
            return 1;
        for(int i=2;i<=n;i++) {
            int total = 0;
            for(int j=1;j<=i;j++)
                total += dp[j-1] * dp[i-j];
            dp[i] = total;
        }
        return dp[n];
    }
}
