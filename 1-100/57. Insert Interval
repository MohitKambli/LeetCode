class Solution {
    public int[][] insert(int[][] intervals, int[] newInterval) {
        int n = intervals.length, i = 0;
        Arrays.sort(intervals, (a, b) -> a[0] - b[0]);
        Stack<int[]> stack = new Stack<>();
        while(i < n) {
            int[] currentInterval = intervals[i];
            if(currentInterval[1] < newInterval[0])
                stack.push(currentInterval);
            else if(currentInterval[0] > newInterval[1])
                break;
            else {
                newInterval[0] = Math.min(newInterval[0], currentInterval[0]);
                newInterval[1] = Math.max(newInterval[1], currentInterval[1]);
            }
            i++;
        }
        stack.push(newInterval);
        while(i < n)
            stack.push(intervals[i++]);
        int len = stack.size(), j = len-1;
        int[][] ans = new int[len][2];
        while(!stack.isEmpty())
            ans[j--] = stack.pop();
        return ans;
    }
}
