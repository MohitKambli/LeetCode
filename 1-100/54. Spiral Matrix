class Solution {
    public List<Integer> spiralOrder(int[][] matrix) {
        int m = matrix.length, n = matrix[0].length;
        int left = 0, top = 0, bottom = m-1, right = n-1;
        List<Integer> ans = new ArrayList<>();
        while(left <= right && top <= bottom) {
            for(int i=left;i<=right;i++)
                ans.add(matrix[top][i]);
            top++;
            for(int i=top;i<=bottom;i++)
                ans.add(matrix[i][right]);
            right--;
            if(left <= right && top <= bottom) {
                for(int i=right;i>=left;i--)
                    ans.add(matrix[bottom][i]);
                bottom--;
                for(int i=bottom;i>=top;i--)
                    ans.add(matrix[i][left]);
                left++;
            }
        }
        return ans;
    }
}






class Solution(object):
    def spiralOrder(self, matrix):
        """
        :type matrix: List[List[int]]
        :rtype: List[int]
        """
        ans = []
        m, n = len(matrix), len(matrix[0])
        left, right, top, bottom = 0, n-1, 0, m-1
        while left <= right and top <= bottom:
            for i in range(left, right+1):
                ans.append(matrix[top][i])
            top += 1
            for i in range(top, bottom+1):
                ans.append(matrix[i][right])
            right -= 1
            if left <= right and top <= bottom:
                for i in range(right, left-1, -1):
                    ans.append(matrix[bottom][i])
                bottom -= 1
                for i in range(bottom, top-1, -1):
                    ans.append(matrix[i][left])
                left += 1
        return ans
