class Solution {
    public void helper(int n, int[] nums, boolean[] visited, List<Integer> arr, List<List<Integer>> ans) {
        if(arr.size() == n) {
            ans.add(new ArrayList<>(arr));
            return;
        }

        for(int i=0;i<n;i++) {
            if(!visited[i]) {
                visited[i] = true;
                arr.add(nums[i]);
                helper(n, nums, visited, arr, ans);
                arr.remove(arr.size()-1);
                visited[i] = false;
            }
        }
    }
    public List<List<Integer>> permute(int[] nums) {
        int n = nums.length;
        boolean[] visited = new boolean[n];
        List<List<Integer>> ans = new ArrayList<>();
        List<Integer> arr = new ArrayList<>();
        helper(n, nums, visited, arr, ans);
        return ans;
    }
}
