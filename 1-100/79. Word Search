class Solution {
    public boolean helper(int index, int i, int j, int m, int n, int len, char[][] board, String word, boolean[][] visited) {
        if(index == len)
            return true;
        if(i < 0 || i == m || j < 0 || j == n || visited[i][j] || word.charAt(index) != board[i][j])
            return false;

        visited[i][j] = true;
        boolean ans = 
            helper(index+1, i-1, j, m, n, len, board, word, visited) ||
            helper(index+1, i+1, j, m, n, len, board, word, visited) ||
            helper(index+1, i, j-1, m, n, len, board, word, visited) ||
            helper(index+1, i, j+1, m, n, len, board, word, visited);
        visited[i][j] = false;
        return ans;
    }
    public boolean exist(char[][] board, String word) {
        int m = board.length, n = board[0].length;
        boolean[][] visited = new boolean[m][n];
        int len = word.length();
        for(int i=0;i<m;i++)
            for(int j=0;j<n;j++)
                if(helper(0, i, j, m, n, len, board, word, visited))
                    return true;
        return false;
    }
}
