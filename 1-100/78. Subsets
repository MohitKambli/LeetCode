class Solution {
    public void helper(int index, int n, int[] nums, List<Integer> arr, List<List<Integer>> ans) {
        ans.add(new ArrayList<>(arr));
        for(int i=index;i<n;i++) {
            arr.add(nums[i]);
            helper(i+1, n, nums, arr, ans);
            arr.remove(arr.size()-1);
        }
    }
    public List<List<Integer>> subsets(int[] nums) {
        List<List<Integer>> ans = new ArrayList<>();
        List<Integer> arr = new ArrayList<>();
        int n = nums.length;
        helper(0, n, nums, arr, ans);
        return ans;
    }
}



class Solution(object):
    def subsets(self, nums):
        """
        :type nums: List[int]
        :rtype: List[List[int]]
        """
        ans = []
        subset = []
        n = len(nums)
        def helper(index):
            if index == n:
                ans.append(subset[:])
                return
            
            subset.append(nums[index])
            helper(index+1)
            subset.pop()
            helper(index+1)
        
        helper(0)
        return ans
