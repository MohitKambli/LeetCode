class Solution {
    public int firstMissingPositive(int[] nums) {
        int value = 1;
        Arrays.sort(nums);
        for(int num : nums)
            if(value == num)
                value++;
        return value;

        /*
        // Converting the negative values to 0
        int n = nums.length;
        for(int i=0;i<n;i++)
            if(nums[i] < 0)
                nums[i] = 0;
        
        // Marking if the element exists in the input array or not
        for(int i=0;i<n;i++) {
            int val = Math.abs(nums[i]);
            if(val >= 1 && val <= n) {
                if(nums[val - 1] > 0)
                    nums[val - 1] *= -1;
                else if(nums[val - 1] == 0)
                    nums[val - 1] = (-1) * (n + 1);
            }
        }

        // To find the solution, iterate from 1 to length of input array + 1
        for(int i=1;i<n+1;i++)
            if(nums[i-1] >= 0)
                return i;
        return n + 1;
        */
    }
}
