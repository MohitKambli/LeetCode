class Solution {
    public int romanToInt(String s) {
        Map<Character, Integer> map = new HashMap<>();
        map.put('I', 1);
        map.put('V', 5);
        map.put('X', 10);
        map.put('L', 50);
        map.put('C', 100);
        map.put('D', 500);
        map.put('M', 1000);
        int n = s.length(), ans = 0;
        for(int i=0;i<n;i++) {
            char ch = s.charAt(i);
            if(i+1 < n && map.get(ch) < map.get(s.charAt(i+1)))
                ans -= map.get(ch);
            else
                ans += map.get(ch);
        }
        return ans;
    }
}




class Solution(object):
    def romanToInt(self, s):
        """
        :type s: str
        :rtype: int
        """
        sym_values = {
            'I': 1,
            'V': 5,
            'X': 10,
            'L': 50,
            'C': 100,
            'D': 500,
            'M': 1000
        }

        n, ans = len(s), 0
        for i in range(n):
            if i+1 < n and sym_values[s[i]] < sym_values[s[i+1]]:
                ans -= sym_values[s[i]]
            else:
                ans += sym_values[s[i]]
        return ans
