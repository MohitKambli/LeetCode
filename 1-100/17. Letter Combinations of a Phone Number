class Solution {
    public void helper(int index, int n, String temp, String digits, Map<Character, String> map, List<String> ans) {
        if(temp.length() == n) {
            ans.add(temp);
            return;
        }

        String value = map.get(digits.charAt(index));
        int len = value.length();
        for(int i=0;i<len;i++) {
            temp += value.charAt(i);
            helper(index+1, n, temp, digits, map, ans);
            temp = temp.substring(0, temp.length()-1);
        }
    }
    public List<String> letterCombinations(String digits) {
        Map<Character, String> map = new HashMap<>();
        List<String> ans = new ArrayList<>();
        if(digits.length() == 0)
            return ans;
        map.put('2', "abc");
        map.put('3', "def");
        map.put('4', "ghi");
        map.put('5', "jkl");
        map.put('6', "mno");
        map.put('7', "pqrs");
        map.put('8', "tuv");
        map.put('9', "wxyz");
        int n = digits.length();
        helper(0, n, "", digits, map, ans);
        return ans;
    }
}
