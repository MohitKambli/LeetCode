class Solution {
    public boolean helper(int i, int j, int m, int n, int N, String s1, String s2, String s3, Boolean[][] dp) {
        if(i == m && j == n && (i+j) == N)
            return true;
        if(i+j == N)
            return false;
        if(dp[i][j] != null)
            return dp[i][j];

        boolean ans = false;
        if(i < m && s1.charAt(i) == s3.charAt(i+j))
            ans = helper(i+1, j, m, n, N, s1, s2, s3, dp);
        if(ans)
            return dp[i][j] = ans;
        if(j < n && s2.charAt(j) == s3.charAt(i+j))
            ans = helper(i, j+1, m, n, N, s1, s2, s3, dp);
        return dp[i][j] = ans;
    }
    public boolean isInterleave(String s1, String s2, String s3) {
        int m = s1.length(), n = s2.length(), N = s3.length();
        Boolean[][] dp = new Boolean[m+1][n+1];
        return helper(0, 0, m, n, N, s1, s2, s3, dp);
    }
}
