class Solution {
    public boolean helper(String s, int left, int right, Boolean[][] dp) {
        if(left >= right)
            return true;
        if(s.charAt(left) != s.charAt(right))
            return false;
        if(dp[left][right] != null)
            return dp[left][right];

        return dp[left][right] = helper(s, left+1, right-1, dp);
    }
    public String longestPalindrome(String s) {
        int n = s.length(), len = 0;
        String ans = "";
        Boolean[][] dp = new Boolean[n][n];
        for(int i=0;i<n;i++) {
            for(int j=i;j<n;j++) {
                if(helper(s, i, j, dp)) {
                    if(j - i + 1 > len) {
                        len = j - i + 1;
                        ans = s.substring(i, j+1);
                    }
                }
            }
        }
        return ans;
    }
}
