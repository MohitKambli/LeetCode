class Solution {
    public int[][] merge(int[][] intervals) {
        int n = intervals.length;
        Arrays.sort(intervals, (a, b) -> a[0] - b[0]);
        Stack<int[]> stack = new Stack<>();
        stack.push(intervals[0]);
        for(int i=1;i<n;i++) {
            int previousStart = stack.peek()[0], previousEnd = stack.peek()[1];
            int currentStart = intervals[i][0], currentEnd = intervals[i][1];
            if(currentStart <= previousEnd) {
                int[] interval = stack.pop();
                interval[0] = Math.min(currentStart, previousStart);
                interval[1] = Math.max(currentEnd, previousEnd);
                stack.push(interval);
            } else {
                stack.push(intervals[i]);
            }
        }
        int len = stack.size(), j = len-1;
        int[][] ans = new int[len][2];
        while(!stack.isEmpty())
            ans[j--] = stack.pop();
        return ans;
    }
}
