class Solution {
    public void transpose(int[][] matrix, int n) {
        for(int i=0;i<n;i++) {
            for(int j=i+1;j<n;j++) {
                int temp = matrix[i][j];
                matrix[i][j] = matrix[j][i];
                matrix[j][i] = temp;
            }
        }
    }
    public void reverse(int[][] matrix, int n) {
        for(int[] row: matrix) {
            int left = 0, right = n-1;
            while(left < right) {
                int temp = row[left];
                row[left] = row[right];
                row[right] = temp;
                left++;
                right--;
            }
        }
    }
    public void rotate(int[][] matrix) {
        int n = matrix.length;
        transpose(matrix, n);
        reverse(matrix, n);
    }
}






class Solution(object):
    def rotate(self, matrix):
        """
        :type matrix: List[List[int]]
        :rtype: None Do not return anything, modify matrix in-place instead.
        """
        
        def reverse():
            for row in matrix:
                left, right = 0, len(row)-1
                while left < right:
                    row[left], row[right] = row[right], row[left]
                    left += 1
                    right -= 1
        
        def transpose():
            for i in range(len(matrix)):
                for j in range(i):
                    matrix[i][j], matrix[j][i] = matrix[j][i], matrix[i][j]
        
        transpose()
        reverse()




