class Solution {
    public boolean isValid(String s) {
        int n = s.length();
        List<Character> stack = new ArrayList<>();
        for(int i=0;i<n;i++) {
            char ch = s.charAt(i);
            if(ch == '(' || ch == '[' || ch == '{') {
                stack.add(ch);
            } else {
                if(stack.isEmpty())
                    return false;
                char ele = stack.remove(stack.size()-1);
                if(ch == ')') {
                    if(ele == '[' || ele == '{')
                        return false;
                } else if(ch == ']') {
                    if(ele == '(' || ele == '{')
                        return false;
                } else if(ch == '}') {
                    if(ele == '(' || ele == '[')
                        return false;
                }
            }
        }
        return stack.isEmpty();
    }
}






class Solution(object):
    def isValid(self, s):
        """
        :type s: str
        :rtype: bool
        """
        stack = []
        n = len(s)
        for i in range(n):
            ch = s[i]
            if ch == '(' or ch == '{' or ch == '[':
                stack.append(ch)
            else:
                if len(stack) == 0:
                    return False
                top = stack[len(stack)-1]
                if ch == ')':
                    if top == '{' or top == '[':
                        return False
                    else:
                        stack.pop(len(stack)-1)
                elif ch == ']':
                    if top == '{' or top == '(':
                        return False
                    else:
                        stack.pop(len(stack)-1)
                elif ch == '}':
                    if top == '(' or top == '[':
                        return False
                    else:
                        stack.pop(len(stack)-1)
        return len(stack) == 0





class Solution:
    def isValid(self, s: str) -> bool:
        stack = []
        for ch in s:
            if ch == '(' or ch == '{' or ch == '[':
                stack.append(ch)
                continue
            if len(stack) == 0:
                return False
            if ch == ')':
                if len(stack) > 0:
                    ele = stack.pop(len(stack)-1)
                    if ele == '[' or ele == '{':
                        return False
            elif ch == '}':
                if len(stack) > 0:
                    ele = stack.pop(len(stack)-1)
                    if ele == '(' or ele == '[':
                        return False
            if ch == ']':
                if len(stack) > 0:
                    ele = stack.pop(len(stack)-1)
                    if ele == '(' or ele == '{':
                        return False
        return len(stack) == 0
             
