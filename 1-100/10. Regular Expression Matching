class Solution {
    public boolean helper(int i, int j, String s, String p, Boolean[][] dp) {
        if(i < 0 && j < 0)
            return true;
        if(i >= 0 && j < 0)
            return false;
        if(j >= 0 && i < 0) {
            if(p.charAt(j) == '*')
                return helper(i, j-2, s, p, dp);
            return false;
        }
        if(dp[i][j] != null)
            return dp[i][j];

        if(s.charAt(i) == p.charAt(j) || p.charAt(j) == '.')
            return dp[i][j] = helper(i-1, j-1, s, p, dp);
        if(p.charAt(j) == '*') {
            boolean zeroMatch = helper(i, j-2, s, p, dp);
            boolean oneOrMoreMatch = (s.charAt(i) == p.charAt(j-1) || p.charAt(j-1) == '.') && helper(i-1, j, s, p, dp);
            return dp[i][j] = zeroMatch || oneOrMoreMatch;
        }
        return dp[i][j] = false;
    }
    public boolean isMatch(String s, String p) {
        int m = s.length(), n = p.length();
        Boolean[][] dp = new Boolean[m][n];
        return helper(m-1, n-1, s, p, dp);
    }
}
