class Solution {
    public int findKthLargest(int[] nums, int k) {
        PriorityQueue<Integer> heap = new PriorityQueue<>((a, b) -> a - b);
        for(int num : nums) {
            heap.offer(num);
            if(heap.size() > k)
                heap.poll();
        }
        return heap.peek();
    }
}




class Solution:
    def findKthLargest(self, nums: List[int], k: int) -> int:
        pq = list(nums)
        heapq.heapify(pq)
        n = len(nums)
        value = n - k
        while value > 0:
            heapq.heappop(pq)
            value -= 1
        return heapq.heappop(pq)
