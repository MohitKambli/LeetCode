/**
 * Definition for a binary tree node.
 * public class TreeNode {
 *     int val;
 *     TreeNode left;
 *     TreeNode right;
 *     TreeNode() {}
 *     TreeNode(int val) { this.val = val; }
 *     TreeNode(int val, TreeNode left, TreeNode right) {
 *         this.val = val;
 *         this.left = left;
 *         this.right = right;
 *     }
 * }
 */

class Solution {
    public TreeNode helper(TreeNode node, TreeNode p, TreeNode q) {
        if(node == null)
            return null;
        if(node.val == p.val || node.val == q.val)
            return node;
        
        TreeNode leftNode = helper(node.left, p, q);
        TreeNode rightNode = helper(node.right, p, q);
        if(leftNode != null && rightNode != null)
            return node;
        if(leftNode == null)
            return rightNode;
        return leftNode;
    }
    public TreeNode lowestCommonAncestor(TreeNode root, TreeNode p, TreeNode q) {
        return helper(root, p, q);
    }
}
