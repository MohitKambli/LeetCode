class Solution {
    public boolean helper(int[] arr) {
        Arrays.sort(arr);
        int diff = arr[1] - arr[0];
        int n = arr.length;
        for(int i=2;i<n;i++)
            if(arr[i] - arr[i-1] != diff)
                return false;
        return true;
    }
    public List<Boolean> checkArithmeticSubarrays(int[] nums, int[] l, int[] r) {
        List<Boolean> ans = new ArrayList<>();
        int n = l.length;
        for(int i=0;i<n;i++) {
            int leftRange = l[i];
            int rightRange = r[i];
            int size = rightRange - leftRange + 1;
            int[] arr = new int[size];
            int count = 0;
            for(int j=leftRange;j<=rightRange;j++)
                arr[count++] = nums[j];
            ans.add(helper(arr));
        }
        return ans;
    }
}
