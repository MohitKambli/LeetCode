class Solution {
    public int findMinSum(int[] nums) {
        int sum = 0, ans = Integer.MAX_VALUE;
        for(int num : nums) {
            sum += num;
            ans = Math.min(ans, sum);
            if(sum > 0)
                sum = 0;
        }
        return ans;
    }
    public int findMaxSum(int[] nums) {
        int sum = 0, ans = Integer.MIN_VALUE;
        for(int num : nums) {
            sum += num;
            ans = Math.max(ans, sum);
            if(sum < 0)
                sum = 0;
        }
        return ans;
    }
    public int maxSubarraySumCircular(int[] nums) {
        int totalSum = 0;
        for(int num : nums)
            totalSum += num;
        int kadaneMinSum = findMinSum(nums);
        int kadaneMaxSum = findMaxSum(nums);
        int circularSum = totalSum - kadaneMinSum;
        if(kadaneMaxSum > 0)
            return Math.max(kadaneMaxSum, circularSum);
        return kadaneMaxSum;
    }
}
