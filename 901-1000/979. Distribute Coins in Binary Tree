/**
 * Definition for a binary tree node.
 * public class TreeNode {
 *     int val;
 *     TreeNode left;
 *     TreeNode right;
 *     TreeNode() {}
 *     TreeNode(int val) { this.val = val; }
 *     TreeNode(int val, TreeNode left, TreeNode right) {
 *         this.val = val;
 *         this.left = left;
 *         this.right = right;
 *     }
 * }
 */
class Solution {
    public int helper(TreeNode node, int[] moves) {
        if(node == null)
            return 0;
        
        int leftCount = helper(node.left, moves);
        int rightCount = helper(node.right, moves);
        moves[0] += Math.abs(leftCount) + Math.abs(rightCount);
        return (leftCount + rightCount + node.val) - 1;
    }
    public int distributeCoins(TreeNode root) {
        int[] moves = {0};
        int coinCount = helper(root, moves);
        return moves[0];
    }
}
