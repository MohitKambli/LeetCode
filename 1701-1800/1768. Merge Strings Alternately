class Solution {
    public String mergeAlternately(String word1, String word2) {
        String ans = "";
        int m = word1.length(), n = word2.length(), i = 0, j = 0;
        while(i < m && j < n) {
            ans += word1.charAt(i++);
            ans += word2.charAt(j++);
        }
        while(i < m)
            ans += word1.charAt(i++);
        while(j < n)
            ans += word2.charAt(j++);
        return ans;
    }
}


class Solution {
    public String mergeAlternately(String p, String q) {
        int i = 0, j = 0, m = p.length(), n = q.length();
        StringBuilder sb = new StringBuilder();
        while(i < m && j < n) {
            sb.append(p.charAt(i++));
            sb.append(q.charAt(j++));
        }
        while(i < m)
            sb.append(p.charAt(i++));
        while(j < n)
            sb.append(q.charAt(j++));
        return sb.toString();
    }
}



class Solution:
    def mergeAlternately(self, word1: str, word2: str) -> str:
        ans = ''
        m, n = len(word1), len(word2)
        i, j = 0, 0
        while i < m and j < n:
            ans += word1[i]
            ans += word2[j]
            i += 1
            j += 1
        while i < m:
            ans += word1[i]
            i += 1
        while j < n:
            ans += word2[j]
            j += 1
        return ans
