/**
 * Definition for singly-linked list.
 * public class ListNode {
 *     int val;
 *     ListNode next;
 *     ListNode() {}
 *     ListNode(int val) { this.val = val; }
 *     ListNode(int val, ListNode next) { this.val = val; this.next = next; }
 * }
 */
class Solution {
    public ListNode reverse(ListNode head) {
        ListNode q = head, p = null;
        while(q != null) {
            ListNode r = q.next;
            q.next = p;
            p = q;
            q = r;
        }
        return p;
    }
    public ListNode addTwoNumbers(ListNode l1, ListNode l2) {
        l1 = reverse(l1);
        l2 = reverse(l2);
        int carry = 0;
        ListNode dummy = new ListNode(-1);
        ListNode curr = dummy;
        while(l1 != null || l2 != null || carry != 0) {
            int value1 = 0;
            if(l1 != null)
                value1 = l1.val;
            int value2 = 0;
            if(l2 != null)
                value2 = l2.val;
            int sum = value1 + value2 + carry;
            carry = sum / 10;
            int value = sum % 10;
            ListNode node = new ListNode(value);
            curr.next = node;
            curr = curr.next;
            if(l1 != null)
                l1 = l1.next;
            if(l2 != null)
                l2 = l2.next;
        }
        ListNode ans = dummy.next;
        return reverse(ans);
    }
}
