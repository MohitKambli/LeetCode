class Solution {
    public int compress(char[] chars) {
        int n = chars.length;
        StringBuilder sb = new StringBuilder();
        sb.append(chars[0]);
        for(int i=1;i<n;i++) {
            int count = 1;
            while(i < n && chars[i] == chars[i-1]) {
                count++;
                i++;
            }
            if(count != 1)
                sb.append(String.valueOf(count));
            if(i < n)
                sb.append(chars[i]);
        }
        int k = 0;
        while(k < sb.length()) {
            chars[k] = sb.charAt(k);
            k++;
        }
        return sb.length();
    }
}




class Solution {
    public int compress(char[] chars) {
        StringBuilder sb = new StringBuilder();
        sb.append(chars[0]);
        int n = chars.length;
        for(int i=1;i<n;i++) {
            int count = 1;
            while(i < n && chars[i] == chars[i-1]) {
                count++;
                i++;
            }
            if(count != 1)
                sb.append(String.valueOf(count));
            if(i < n)
                sb.append(chars[i]);
        }
        int k = 0;
        while(k < sb.length()) {
            chars[k] = sb.charAt(k);
            k++;
        }
        return sb.length();
    }
}



class Solution:
    def compress(self, chars: List[str]) -> int:
        n, i = len(chars), 0
        s = ''
        while i < n:
            ch = chars[i]
            frequency = 1
            s += ch
            while i+1 < n and chars[i+1] == ch:
                frequency += 1
                i += 1
            if frequency > 1:
                s += str(frequency)
            i += 1
        ans = len(s)
        for i in range(ans):
            chars[i] = s[i]
        return ans
