class Solution {
    public void helper(int index, int previous, int n, int[] nums, List<Integer> arr, Set<List<Integer>> ans) {
        if(arr.size() >= 2)
            ans.add(new ArrayList<>(arr));

        for(int i=index;i<n;i++) {
            if(nums[i] >= previous) {
                arr.add(nums[i]);
                helper(i+1, nums[i], n, nums, arr, ans);
                arr.remove(arr.size()-1);
            }
        }
    }
    public List<List<Integer>> findSubsequences(int[] nums) {
        Set<List<Integer>> ans = new HashSet<>();
        int n = nums.length;
        List<Integer> arr = new ArrayList<>();
        helper(0, -50000, n, nums, arr, ans);
        return new ArrayList<>(ans);
    }
}
