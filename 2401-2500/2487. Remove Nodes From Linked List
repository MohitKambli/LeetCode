/**
 * Definition for singly-linked list.
 * public class ListNode {
 *     int val;
 *     ListNode next;
 *     ListNode() {}
 *     ListNode(int val) { this.val = val; }
 *     ListNode(int val, ListNode next) { this.val = val; this.next = next; }
 * }
 */
class Solution {
    public ListNode reverseLL(ListNode head) {
        if(head == null || head.next == null)
            return head;
        ListNode p = null, q = head;
        while(q != null) {
            ListNode r = q.next;
            q.next = p;
            p = q;
            q = r;
        }
        return p;
    }
    public ListNode removeNodes(ListNode head) {
        head = reverseLL(head);
        int maxValue = -1;
        ListNode prev = null;
        ListNode curr = head;
        while(curr != null) {
            maxValue = Math.max(maxValue, curr.val);
            if(curr.val < maxValue)
                prev.next = curr.next;
            else
                prev = curr;
            curr = curr.next;
        }
        return reverseLL(head);
    }
}
