/**
 * Definition for a binary tree node.
 * public class TreeNode {
 *     int val;
 *     TreeNode left;
 *     TreeNode right;
 *     TreeNode() {}
 *     TreeNode(int val) { this.val = val; }
 *     TreeNode(int val, TreeNode left, TreeNode right) {
 *         this.val = val;
 *         this.left = left;
 *         this.right = right;
 *     }
 * }
 */
class Solution {
    public int findSecondMinimumValue(TreeNode root) {
        List<TreeNode> queue = new ArrayList<>();
        List<Integer> values = new ArrayList<>();
        queue.add(root);
        while(queue.size() != 0) {
            int queueSize = queue.size();
            for(int i=0;i<queueSize;i++) {
                TreeNode node = queue.remove(0);
                if(node != null) {
                    queue.add(node.left);
                    queue.add(node.right);
                    if(!values.contains(node.val))
                        values.add(node.val);
                }
            }
        }
        Collections.sort(values);
        return values.size() == 1 ? -1 : values.get(1);
    }
}
