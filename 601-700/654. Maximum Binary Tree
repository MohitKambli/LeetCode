/**
 * Definition for a binary tree node.
 * public class TreeNode {
 *     int val;
 *     TreeNode left;
 *     TreeNode right;
 *     TreeNode() {}
 *     TreeNode(int val) { this.val = val; }
 *     TreeNode(int val, TreeNode left, TreeNode right) {
 *         this.val = val;
 *         this.left = left;
 *         this.right = right;
 *     }
 * }
 */
class Solution {
    public TreeNode helper(int start, int end, int[] nums) {
        if(start > end)
            return null;
        
        int index = -1;
        int max = Integer.MIN_VALUE;
        for(int i=start;i<=end;i++) {
            if(nums[i] >= max) {
                max = nums[i];
                index = i;
            }
        }
        TreeNode node = new TreeNode(max);
        node.left = helper(start, index-1, nums);
        node.right = helper(index+1, end, nums);
        return node;
    }
    public TreeNode constructMaximumBinaryTree(int[] nums) {
        return helper(0, nums.length-1, nums);
    }
}
