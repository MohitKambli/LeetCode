class Solution {
    public int calPoints(String[] ops) {
        List<Integer> stack = new ArrayList<>();
        for(String op : ops) {
            if(op.equals("+")) {
                int x = stack.get(stack.size()-1);
                int y = stack.get(stack.size()-2);
                stack.add(x + y);
            } else if(op.equals("D")) {
                int x = stack.get(stack.size()-1);
                stack.add(x * 2);
            } else if(op.equals("C")) {
                if(!stack.isEmpty())
                    stack.remove(stack.size()-1);
            } else {
                stack.add(Integer.parseInt(op));
            }
        }
        int sum = 0;
        for(int x : stack)
            sum += x;
        return sum;
    }
}



class Solution {
    public int calPoints(String[] operations) {
        Stack<Integer> stack = new Stack<>();
        for(String operation : operations) {
            if(operation.equals("+")) {
                if(stack.size() >= 2) {
                    int x = stack.pop();
                    int y = stack.pop();
                    stack.push(y);
                    stack.push(x);
                    stack.push(x + y);
                }
            } else if(operation.equals("D")) {
                if(!stack.isEmpty()) 
                    stack.push(stack.peek() * 2);
            } else if(operation.equals("C")) {
                if(!stack.isEmpty())
                    stack.pop();
            } else {
                stack.push(Integer.parseInt(operation));
            }
        }
        int ans = 0;
        while(!stack.isEmpty())
            ans += stack.pop();
        return ans;
    }
}
