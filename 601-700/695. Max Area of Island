class Solution {
    public void helper(int i, int j, int m, int n, int[][] grid, int[] count) {
        if(i < 0 || i == m || j < 0 || j == n || grid[i][j] == 0)
            return;
        
        grid[i][j] = 0;
        count[0]++;
        helper(i-1, j, m, n, grid, count);
        helper(i+1, j, m, n, grid, count);
        helper(i, j-1, m, n, grid, count);
        helper(i, j+1, m, n, grid, count);
    }
    public int maxAreaOfIsland(int[][] grid) {
        int m = grid.length, n = grid[0].length, ans = 0;
        for(int i=0;i<m;i++) {
            for(int j=0;j<n;j++) {
                if(grid[i][j] == 1) {
                    int[] count = new int[]{0};
                    helper(i, j, m, n, grid, count);
                    ans = Math.max(ans, count[0]);
                }
            }
        }
        return ans;
    }
}
