class Solution {
    public boolean helper(int left, int right, int n, String s, Boolean[][] dp) {
        if(left >= right)
            return true;
        if(s.charAt(left) != s.charAt(right))
            return false;
        if(dp[left][right] != null)
            return dp[left][right];
        
        return dp[left][right] = helper(left+1, right-1, n, s, dp);
    }
    public int countSubstrings(String s) {
        int n = s.length(), count = 0;
        Boolean[][] dp = new Boolean[n][n];
        for(int i=0;i<n;i++)
            for(int j=i;j<n;j++)
                if(helper(i, j, n, s, dp))
                    count++;
        return count;
    }
}

