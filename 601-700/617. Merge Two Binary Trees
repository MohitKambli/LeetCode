/**
 * Definition for a binary tree node.
 * public class TreeNode {
 *     int val;
 *     TreeNode left;
 *     TreeNode right;
 *     TreeNode() {}
 *     TreeNode(int val) { this.val = val; }
 *     TreeNode(int val, TreeNode left, TreeNode right) {
 *         this.val = val;
 *         this.left = left;
 *         this.right = right;
 *     }
 * }
 */
class Solution {
    public TreeNode helper(TreeNode p, TreeNode q) {
        if(p == null && q == null)
            return null;
        if(p == null)
            return q;
        if(q == null)
            return p;
        
        TreeNode node = new TreeNode(p.val + q.val);
        node.left = helper(p.left, q.left);
        node.right = helper(p.right, q.right);
        return node;
    }
    public TreeNode mergeTrees(TreeNode root1, TreeNode root2) {
        return helper(root1, root2);
    }
}
